---
title: Meterological Time series Imputation using Kalman Filters
author: Simone Massaro - Bioclim seminar 18 Jan 2023
Date: "18 Jan 2023"
format:
  revealjs:
    transition: fade
    slide-number: true
    chalkboard: true
---

```{r}
#| include: false
library(vegawidget)
library(magrittr)
library(here)

base_path <- here::here("analysis/presentations/plots_18_jan/")
show_plot <- function(path){
  f_name = paste0(base_path, path, ".vl.json")
  as_vegaspec(f_name)
}

```


## Outline

1.  Introduction
2.  Kalman Filter
3.  Preliminary results
4.  Next steps

# 1. Introduction

## Background

-   EC tower measures also meteorological variables (eg. air temperature, wind speed)
-   technical issues (eg. broken sensor) result in **meteo time series** with **gaps**
-   Presence of gaps is a problem in many EC data applications (eg. ecosystem modelling)

## Dataset

- Fluxnet 2015 data from Hainich (more 20 years)
- Global meteo dataset (downscaled ERA-Interim from Fluxnet 2015)
- meteorological measurements every 30 mins
- focusing on 3 variables
    -   Air temperature: `TA`
    -   Incoming shortwave radiation: `SW_IN`
    -   Vapour Pressure Deficit: `VPD`

## Gap len distribution in Fluxnet

![plot of distribution of gaps for all `TA`, `SW_IN` and `VPD` for all sites](plots_18_jan/gap_len_dist.png)

## Gap len distribution in Fluxnet

![plot of distribution of small gaps (<1 week) for all `TA`, `SW_IN` and `VPD` for all sites](plots_18_jan/gap_len_dist_small.png)

## How to fill gaps

1.  use previous and following measurements for one variable and temporal auto-correlation (eg. diurnal cycles)
2.  correlation with other variables measures (eg. solar radiation and temperature)
3.  other measurements of meteo variables (eg. nearby station)

## State of the art

OneFlux pipeline (Fluxnet + ICOS + AmeriFlux)

- Short and medium gaps using Marginal Distribution Sampling (MDS)

- Long gaps filled with ERA data (global meteo dataset) using linear transformation to reduce site bias
    
## How MDS (Marginal Distribution Sampling) works {.smaller}

:::: {.columns}
::: {.column}
- take a time window (7 days) around the gap
- use 3 predictors variables (`TA`, `SW_IN` and `VPD`) and divide them in n discrete bins
- for each bin (combination of conditions) find the average value of the missing variable
- for each gap find the closest condition and fill with the average value
- if necessary increase the time window 
- quality flag depends on the time window size
:::

::: {.column}
![](plots_18_jan/Tair_dist-1.png)

:::
::::

## MDS - gap filling `TA`


![](plots_18_jan/Tair_plot_timeseries_gap_10-1.png)

## MDS - gap filling `SW_IN`


![](plots_18_jan/SW_IN_plot_timeseries_gap_10-1.png)


## MDS - gap filling `VPD`

![](plots_18_jan/VPD_plot_timeseries_gap_10-1.png)


## Current approaches limitations

-   No uncertainty for the predictions (only a quality flag)
-   Either MDS (variable correlation) or ERA data, don't combine the information
-   don't consider the observations before and after the gap

## Thesis goal

-   develop model to impute missing data in meteorological time series
-   include all 3 imputation approaches
-   provide an uncertainty of the predictions


# 3. Model: Kalman Filter

## How Kalman Filter works

:::: {.columns}
::: {.column width=60%}
Models over time a **latent** variable (we are not observing it), the **state** of the system.

The current state $x_t$ depends using:

1. the previous state $\color{blue}{x_{t-1}}$
2. current observation $\color{green}{y_t}$
3. control variable $\color{purple}{c_t}$ (ERA data)

:::
::: {.column width=40%}
![](plots_18_jan/latent_var.png)
:::
::::

## 1. Previous state {.smaller}

:::: {.columns}

:::{.column}
$$ x_t = A\color{blue}{x_{t-1}} + \varepsilon $$
where:

- $x_{t}$ is the current state
- $\color{blue}{x_{t-1}}$ is the previous state
- $A$ is a linear transformation of $\color{blue}{x_{t-1}}$
- $\varepsilon$ is the "process" noise which is a random variable with a normal distribution with mean 0
:::

:::{.column .center}

```{r}
#| fig.cap="Example of Kalman Filter $A=1$"
show_plot("only_state")
```
:::

::::

## 2. Current Observation {.smaller}

:::: {.columns}

:::{.column}
$$ \begin{aligned}x_t &= A\color{blue}{x_{t-1}} + \varepsilon \\\color{green}{y_t} &= Hx_t + \nu\end{aligned}$$

where:

- $\color{green}{y_{t}}$ is the current observation
- $H$ is a linear transformation of $\color{green}{y_{t}}$
- $\nu$ is the "observation" noise which is a random variable with a normal distribution with mean 0

using the rules of probabilistic inference if we observe $y_t$ you can update the distribution of $x_t$
:::

:::{.column}

```{r}
#| fig.cap="Example of Kalman Filter $H=1$ $A=1$"
show_plot("obs")
```
:::

::::

## Gaps


```{r}
#| fig.cap="Example of Kalman Filter $H=1$ $A=1$"
show_plot("gaps")
```

## 3. Control variable {.smaller}

:::: {.columns}

:::{.column}
$$ \begin{aligned}x_t &= A\color{blue}{x_{t-1}} + B\color{purple}{c_t} + \varepsilon \\\color{green}{y_t} &= Hx_t + \nu\end{aligned}$$

where:

- $B$ is a linear transformation of $\color{purple}{c_t}$

Use the difference between current and previous value of control variable 
:::

:::{.column}

```{r}
#| fig.cap="Example of Kalman Filter $H=1$ $A=1$ $B=[-1,1]$"
show_plot("control")
```
:::

::::

## Extra: Variable correlation

:::: {.columns}

:::{.column}

Gap in two variables
```{r}
show_plot("var_no_corr")
```

:::

:::{.column .fragment}

Gap in only one variable
```{r}
show_plot("var_corr")
```
:::

::::

## How to find model parameters {.incremental}

- create artificial gaps
- predicting gap in the model
- compute the log likelihood of the predictions
- maximise the log likelihood

## Kalman Filter

pros:

- Probabilist model: the output of the model is a **distribution of predictions**, not a single value
- Combines **all** 3 approaches to gap filling in one model
- interpretable paramters
- computationally efficient

cons:

- keeps tracks only of the local state

# 2. Preliminary results


## Kalman Filters gap #1

```{r}
show_plot("results_gap_all_vars_g0")
```

## Kalman Filters gap #2

```{r}
show_plot("results_gap_all_vars_g1")
```

## Kalman Filters gap #3

```{r}
show_plot("results_gap_all_vars_g2")
```

# Next steps

## What is missing in the model development

- improve numerical stability of model (work in progress)
- find optimal settings for training and inference
  - n observations before after/gap
  - how to best generate artificial gaps


## How to assess the model?

Open questions:

- how to choose gap lengths?
- how to choose number of variables missing?
- which variable to focus on?


## How to assess the model? Metrics

- RMSE - interpretation difficult as it's relative to the variable
- r2 - gaps are often too short to interpret properly
- ? 

## How to assess the model? Figures
:::: {.columns}
::: {.column}

Time series

```{r}
knitr::include_graphics("plots_18_jan/Tair_plot_timeseries_gap_10-1.png")
```

:::

::: {.column}

Scatter plots

```{r}
knitr::include_graphics("plots_18_jan/Tair_plot_scatter-1.png")
```

:::
::::

## How to assess the model? Figures

:::: {.columns}
::: {.column}

Gap length / mean RMSE

```{r}
knitr::include_graphics("plots_18_jan/Tair_plot_rmse-1.png")
```

:::

::: {.column}

Distribution gaps vs filled

```{r}
knitr::include_graphics("plots_18_jan/Tair_plot_fill_dist-1.png")
```

:::
::::


## Model use

- what is the importance of the model performance?
  - can optimize kalman filter performance
  
- what is the impact of better gap filling for data users?
  - why better filling for short gaps is useful
  - how can the uncertainty be used

## Future outlook

- provide pre-trained model on Fluxnet 2015 and then to fine-tune to local site
- provide web-service for filling gaps
- reprocess Fluxnet 2015 dataset

# Questions & Comments

::: footer
Github repo: [https://github.com/mone27/meteo_imp](https://github.com/mone27/meteo_imp)\
Website: <https://mone27.github.io/meteo_imp>
::: 
